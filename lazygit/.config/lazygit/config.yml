gui:
  # stuff relating to the UI
  scrollHeight: 2 # how many lines you scroll by
  scrollPastBottom: true # enable scrolling past the bottom
  sidePanelWidth: 0.3333 # number from 0 to 1
  expandFocusedSidePanel: false
  mainPanelSplitMode: "flexible" # one of 'horizontal' | 'flexible' | 'vertical'
  language: "auto" # one of 'auto' | 'en' | 'zh' | 'pl' | 'nl' | 'ja'
  timeFormat: "02 Jan 06 15:04 MST" # https://pkg.go.dev/time#Time.Format
  theme:
    lightTheme: false # For terminals with a light background
    activeBorderColor:
      - magenta
      - bold
    inactiveBorderColor:
      - blue
    optionsTextColor:
      - blue
    selectedLineBgColor:
      - "#3b4252" # set to `default` to have no background colour
    selectedRangeBgColor:
      - default
    cherryPickedCommitBgColor:
      - "#3b4252"
    cherryPickedCommitFgColor:
      - yellow
    unstagedChangesColor:
      - red
  commitLength:
    show: true
  mouseEvents: true
  skipUnstageLineWarning: false
  skipStashWarning: false
  showFileTree: false # for rendering changes files in a tree format
  showListFooter: true # for seeing the '5 of 20' message in list panels
  showRandomTip: true
  showBottomLine: false # for hiding the bottom information line (unless it has important information to tell you)
  showCommandLog: true
  showIcons: true
  commandLogSize: 8
  splitDiff: "auto" # one of 'auto' | 'always'
  authorColors:
    "Thierry Delafontaine": "#b48ead"
    "*": "#81a1c1"
git:
  paging:
    colorArg: always
    pager: delta --dark --paging=never
  commit:
    signOff: false
  merging:
    # only applicable to unix users
    manualCommit: false
    # extra args passed to `git merge`, e.g. --no-ff
    args: ""
  log:
    # one of date-order, author-date-order, topo-order.
    # topo-order makes it easier to read the git log graph, but commits may not
    # appear chronologically. See https://git-scm.com/docs/git-log#_commit_ordering
    order: "topo-order"
    # one of always, never, when-maximised
    # this determines whether the git graph is rendered in the commits panel
    showGraph: "when-maximised"
  skipHookPrefix: WIP
  autoFetch: true
  autoRefresh: true
  branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --"
  allBranchesLogCmd: "git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium"
  overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
  disableForcePushing: false
  parseEmoji: true
  diffContextSize: 3 # how many lines of context are shown around a change in diffs
os:
  editCommand: "nvim" # see 'Configuring File Editing' section
  editCommandTemplate: "{{editor}} +{{line}} -- {{filename}}"
  openCommand: "xdg-open {{filename}}"
refresher:
  refreshInterval: 10 # File/submodule refresh interval in seconds. Auto-refresh can be disabled via option 'git.autoRefresh'.
  fetchInterval: 60 # Re-fetch interval in seconds. Auto-fetch can be disabled via option 'git.autoFetch'.
update:
  method: never # can be: prompt | background | never
  days: 14 # how often an update is checked for
reporting: "undetermined" # one of: 'on' | 'off' | 'undetermined'
confirmOnQuit: false
# determines whether hitting 'esc' will quit the application when there is nothing to cancel/close
quitOnTopLevelReturn: false
disableStartupPopups: false
notARepository: "prompt" # one of: 'prompt' | 'create' | 'skip'
promptToReturnFromSubprocess: false # display confirmation when subprocess terminates
keybinding:
  universal:
    quit: "q"
    quit-alt1: "<c-c>" # alternative/alias of quit
    return: "<esc>" # return to previous menu, will quit if there's nowhere to return
    quitWithoutChangingDirectory: "Q"
    prevItem: "k" # go one line up
    nextItem: "j" # go one line down
    prevItem-alt1: "<up>" # go one line up
    nextItem-alt1: "<down>" # go one line down
    prevBlock: "<c-p>" # goto the previous block / panel
    nextBlock: "<c-n>" # goto the next block / panel
    prevBlock-alt1: "<left>" # goto the previous block / panel
    nextBlock-alt1: "<right>" # goto the next block / panel
    gotoTop: "g" # go to top of list
    gotoBottom: "G" # go to bottom of list
    scrollLeft: "H" # scroll left within list view
    scrollRight: "L" # scroll right within list view
    nextMatch: "n"
    prevMatch: "N"
    optionMenu: "?" # show help menu
    select: "<space>"
    goInto: "<enter>"
    openRecentRepos: "<c-o>"
    confirm: "<enter>"
    confirm-alt1: "y"
    remove: "d"
    new: "n"
    edit: "e"
    openFile: "<c-e>"
    scrollUpMain: "<c-u>" # main panel scroll up
    scrollDownMain: "<c-d>" # main panel scroll down
    executeCustomCommand: ":"
    createRebaseOptionsMenu: "m"
    pushFiles: "P"
    pullFiles: "p"
    refresh: "R"
    createPatchOptionsMenu: "<c-m>"
    nextTab: "]"
    prevTab: "["
    nextScreenMode: "+"
    prevScreenMode: "-"
    undo: "u"
    redo: "<c-r>"
    filteringMenu: "<c-f>"
    diffingMenu: "D"
    copyToClipboard: "<c-y>"
    submitEditorText: "<enter>"
    appendNewline: "o"
    extrasMenu: "@"
    toggleWhitespaceInDiffView: "<c-w>"
    increaseContextInDiffView: "}"
    decreaseContextInDiffView: "{"
  status:
    checkForUpdate: "u"
    recentRepos: "<enter>"
  files:
    commitChanges: "c"
    commitChangesWithoutHook: "w" # commit changes without pre-commit hook
    amendLastCommit: "A"
    commitChangesWithEditor: "C"
    ignoreFile: "i"
    refreshFiles: "r"
    stashAllChanges: "s"
    viewStashOptions: "S"
    toggleStagedAll: "a" # stage/unstage all
    viewResetOptions: "D"
    fetch: "f"
    toggleTreeView: "<c-t>"
  branches:
    createPullRequest: "o"
    viewPullRequestOptions: "O"
    checkoutBranchByName: "c"
    forceCheckoutBranch: "F"
    rebaseBranch: "r"
    mergeIntoCurrentBranch: "M"
    viewGitFlowOptions: "i"
    fastForward: "f" # fast-forward this branch from its upstream
    pushTag: "P"
    setUpstream: "u" # set as upstream of checked-out branch
    fetchRemote: "f"
  commits:
    squashDown: "s"
    renameCommit: "r"
    renameCommitWithEditor: "R"
    viewResetOptions: "r"
    markCommitAsFixup: "f"
    createFixupCommit: "F" # create fixup commit for this commit
    squashAboveCommits: "S"
    moveDownCommit: "J" # move commit down one
    moveUpCommit: "K" # move commit up one
    amendToCommit: "A"
    pickCommit: "p" # pick commit (when mid-rebase)
    revertCommit: "t"
    cherryPickCopy: "c"
    cherryPickCopyRange: "C"
    pasteCommits: "v"
    tagCommit: "T"
    checkoutCommit: "<space>"
    resetCherryPick: "<c-R>"
    copyCommitMessageToClipboard: "<c-y>"
    openLogMenu: "<c-l>"
    viewBisectOptions: "b"
  stash:
    popStash: "p"
  commitFiles:
    checkoutCommitFile: "c"
  main:
    toggleDragSelect: "v"
    toggleDragSelect-alt1: "V"
    toggleSelectHunk: "a"
    pickBothHunks: "b"
  submodules:
    init: "i"
    update: "u"
    bulkMenu: "b"
